{
  "contractName": "ContratoAuxiliar",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "albumAlPropietario",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_nombre",
          "type": "string"
        }
      ],
      "name": "_crearTarjetaAleatorio",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "albumes",
      "outputs": [
        {
          "name": "nombre",
          "type": "string"
        },
        {
          "name": "randomAlbum",
          "type": "uint256"
        },
        {
          "name": "nivelAlbum",
          "type": "uint32"
        },
        {
          "name": "fechaEmision",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_nombre",
          "type": "string"
        }
      ],
      "name": "_crearAlbumAleatorio",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tarjetaAlPropietario",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tarjetas",
      "outputs": [
        {
          "name": "nombre",
          "type": "string"
        },
        {
          "name": "randomTarjeta",
          "type": "uint256"
        },
        {
          "name": "nivelTarjeta",
          "type": "uint32"
        },
        {
          "name": "fechaEmision",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "albumId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "nombre",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "randomAlbum",
          "type": "uint256"
        }
      ],
      "name": "NuevoAlbum",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "tarjetaId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "nombre",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "randomTarjeta",
          "type": "uint256"
        }
      ],
      "name": "NuevaTarjeta",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    }
  ],
  "bytecode": "0x60606040526010600155600154600a0a6002556010600655600654600a0a600755336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610ff28061006f6000396000f30060606040526004361061008e576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630b8bfee8146100935780633478053e146100f65780638da5cb5b14610153578063bc7a2230146101a8578063beec3a8814610265578063ce4104b8146102c2578063f2fde38b14610325578063fd82b3301461035e575b600080fd5b341561009e57600080fd5b6100b4600480803590602001909190505061041b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561010157600080fd5b610151600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190505061044e565b005b341561015e57600080fd5b6101666104c7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156101b357600080fd5b6101c960048080359060200190919050506104ec565b60405180806020018581526020018463ffffffff1663ffffffff168152602001838152602001828103825286818151815260200191508051906020019080838360005b8381101561022757808201518184015260208101905061020c565b50505050905090810190601f1680156102545780820380516001836020036101000a031916815260200191505b509550505050505060405180910390f35b341561027057600080fd5b6102c0600480803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919050506105d3565b005b34156102cd57600080fd5b6102e3600480803590602001909190505061064c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561033057600080fd5b61035c600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061067f565b005b341561036957600080fd5b61037f60048080359060200190919050506107d4565b60405180806020018581526020018463ffffffff1663ffffffff168152602001838152602001828103825286818151815260200191508051906020019080838360005b838110156103dd5780820151818401526020810190506103c2565b50505050905090810190601f16801561040a5780820380516001836020036101000a031916815260200191505b509550505050505060405180910390f35b60096020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414151561049d57600080fd5b6104a6826108bb565b90506064818115156104b457fe5b06810390506104c3828261093d565b5050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6008818154811015156104fb57fe5b9060005260206000209060040201600091509050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105a75780601f1061057c576101008083540402835291602001916105a7565b820191906000526020600020905b81548152906001019060200180831161058a57829003601f168201915b5050505050908060010154908060020160009054906101000a900463ffffffff16908060030154905084565b600080600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414151561062257600080fd5b61062b82610b42565b905060648181151561063957fe5b06810390506106488282610bc4565b5050565b60046020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156106da57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561071657600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6003818154811015156107e357fe5b9060005260206000209060040201600091509050806000018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561088f5780601f106108645761010080835404028352916020019161088f565b820191906000526020600020905b81548152906001019060200180831161087257829003601f168201915b5050505050908060010154908060020160009054906101000a900463ffffffff16908060030154905084565b600080826040518082805190602001908083835b6020831015156108f457805182526020820191506020810190506020830392506108cf565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206001900490506002548181151561093457fe5b06915050919050565b60006001600380548060010182816109559190610dc9565b91600052602060002090600402016000608060405190810160405280888152602001878152602001600163ffffffff16815260200142815250909190915060008201518160000190805190602001906109af929190610dfb565b506020820151816001015560408201518160020160006101000a81548163ffffffff021916908363ffffffff160217905550606082015181600301555050039050336004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548092919060010191905055507f8badb79e2b16dddd1421d343d55abc7770e276bb1e88dc62b540404cb48de5e38184846040518084815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b83811015610b01578082015181840152602081019050610ae6565b50505050905090810190601f168015610b2e5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a1505050565b600080826040518082805190602001908083835b602083101515610b7b5780518252602082019150602081019050602083039250610b56565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060019004905060075481811515610bbb57fe5b06915050919050565b6000600160088054806001018281610bdc9190610e7b565b91600052602060002090600402016000608060405190810160405280888152602001878152602001600163ffffffff1681526020014281525090919091506000820151816000019080519060200190610c36929190610dfb565b506020820151816001015560408201518160020160006101000a81548163ffffffff021916908363ffffffff160217905550606082015181600301555050039050336009600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548092919060010191905055507ffaaad2afe7e449b8027cfe543bc62c46e132059448a8af389ef1f814070a1e758184846040518084815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b83811015610d88578082015181840152602081019050610d6d565b50505050905090810190601f168015610db55780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a1505050565b815481835581811511610df657600402816004028360005260206000209182019101610df59190610ead565b5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610e3c57805160ff1916838001178555610e6a565b82800160010185558215610e6a579182015b82811115610e69578251825591602001919060010190610e4e565b5b509050610e779190610f03565b5090565b815481835581811511610ea857600402816004028360005260206000209182019101610ea79190610f28565b5b505050565b610f0091905b80821115610efc5760008082016000610ecc9190610f7e565b60018201600090556002820160006101000a81549063ffffffff0219169055600382016000905550600401610eb3565b5090565b90565b610f2591905b80821115610f21576000816000905550600101610f09565b5090565b90565b610f7b91905b80821115610f775760008082016000610f479190610f7e565b60018201600090556002820160006101000a81549063ffffffff0219169055600382016000905550600401610f2e565b5090565b90565b50805460018160011615610100020316600290046000825580601f10610fa45750610fc3565b601f016020900490600052602060002090810190610fc29190610f03565b5b505600a165627a7a72305820e89c10ae407f71fd4de43413129d2eec8ba034bb6f7a6039859e90d92d04bea30029",
  "deployedBytecode": "",
  "sourceMap": "112:1428:0:-;;;278:2:3;257:23;;304:13;;298:2;:19;284:33;;296:2:2;275:23;;322:13;;316:2;:19;302:33;;505:10:4;497:5;;:18;;;;;;;;;;;;;;;;;;112:1428:0;;;;;;",
  "deployedSourceMap": "112:1428:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;505:51:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1056:259:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;236:20:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;478:22:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;478:22:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1041:251;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;497:53:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;830:174:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;467:25:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;467:25:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;505:51:2;;;;;;;;;;;;;;;;;;;;;;:::o;1056:259:3:-;1175:14;1167:1;1125:26;:38;1152:10;1125:38;;;;;;;;;;;;;;;;:43;1117:52;;;;;;;;1192:34;1218:7;1192:25;:34::i;:::-;1175:51;;1268:3;1256:9;:15;;;;;;;;1244:9;:27;1232:39;;1277:33;1291:7;1300:9;1277:13;:33::i;:::-;1056:259;;:::o;236:20:4:-;;;;;;;;;;;;;:::o;478:22:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1041:251::-;1156:14;1148:1;1108:24;:36;1133:10;1108:36;;;;;;;;;;;;;;;;:41;1100:50;;;;;;;;1173:32;1197:7;1173:23;:32::i;:::-;1156:49;;1247:3;1235:9;:15;;;;;;;;1223:9;:27;1211:39;;1256:31;1268:7;1277:9;1256:11;:31::i;:::-;1041:251;;:::o;497:53:3:-;;;;;;;;;;;;;;;;;;;;;;:::o;830:174:4:-;650:5;;;;;;;;;;;636:19;;:10;:19;;;628:28;;;;;;;;926:1;906:22;;:8;:22;;;;898:31;;;;;;;;968:8;940:37;;961:5;;;;;;;;;;;940:37;;;;;;;;;;;;991:8;983:5;;:16;;;;;;;;;;;;;;;;;;830:174;:::o;467:25:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;905:147::-;976:4;988:9;1015:4;1005:15;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1005:15:3;;;;;;;;;;;;;;;;1000:21;;;988:33;;1041:6;;1034:4;:13;;;;;;;;1027:20;;905:147;;;;:::o;611:290::-;686:7;754:1;696:8;:55;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;710:40;;;;;;;;;718:7;710:40;;;;727:14;710:40;;;;743:1;710:40;;;;;;746:3;710:40;;;696:55;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:59;686:69;;788:10;761:20;:24;782:2;761:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;804:26;:38;831:10;804:38;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;855:41;868:2;872:7;881:14;855:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;855:41:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;611:290;;;:::o;892:145:2:-;961:4;973:9;1000:4;990:15;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;990:15:2;;;;;;;;;;;;;;;;985:21;;;973:33;;1026:6;;1019:4;:13;;;;;;;;1012:20;;892:145;;;;:::o;615:273::-;686:7;749:1;696:7;:50;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;709:36;;;;;;;;;715:7;709:36;;;;724:12;709:36;;;;738:1;709:36;;;;;;741:3;709:36;;;696:50;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:54;686:64;;781:10;756:18;:22;775:2;756:22;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;797:24;:36;822:10;797:36;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;846:37;857:2;861:7;870:12;846:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;846:37:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;615:273;;;:::o;112:1428:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o",
  "source": "pragma solidity ^0.4.19;\n\nimport \"./generartarjeta.sol\";\nimport \"./generaralbum.sol\";\nimport \"./safemath.sol\";\n\ncontract ContratoAuxiliar is GenerarTarjeta, GenerarAlbum {\n\n  using SafeMath for uint256;\n\n  modifier onlyOwnerOfTarjeta(uint _tarjetaId) {\n    require(msg.sender == tarjetaAlPropietario[_tarjetaId]);\n    _;\n  }\n\n  modifier onlyOwnerOfAlbum(uint _albumId) {\n    require(msg.sender == albumAlPropietario[_albumId]);\n    _;\n  }\n/*\n  uint levelUpFee = 0.001 ether;\n\n  modifier aboveLevel(uint _level, uint _zombieId) {\n    require(zombies[_zombieId].level >= _level);\n    _;\n  }\n\n  function withdraw() external onlyOwner {\n    owner.transfer(this.balance);\n  }\n\n  function setLevelUpFee(uint _fee) external onlyOwner {\n    levelUpFee = _fee;\n  }\n\n  function levelUp(uint _zombieId) external payable {\n    require(msg.value == levelUpFee);\n    zombies[_zombieId].level++;\n  }\n\n  function changeName(uint _zombieId, string _newName) external aboveLevel(2, _zombieId) onlyOwnerOf(_zombieId) {\n    zombies[_zombieId].name = _newName;\n  }\n\n  function changeDna(uint _zombieId, uint _newDna) external aboveLevel(20, _zombieId) onlyOwnerOf(_zombieId) {\n    zombies[_zombieId].dna = _newDna;\n  }\n\n  function getZombiesByOwner(address _owner) external view returns(uint[]) {\n    uint[] memory result = new uint[](ownerZombieCount[_owner]);\n    uint counter = 0;\n    for (uint i = 0; i < zombies.length; i++) {\n      if (zombieToOwner[i] == _owner) {\n        result[counter] = i;\n        counter++;\n      }\n    }\n    return result;\n  }\n*/\n}\n",
  "sourcePath": "/home/jacg/Escritorio/BlockChain/coleccion-tarjetas/coleccion-tarjetas/contracts/contratoauxiliar.sol",
  "ast": {
    "absolutePath": "/home/jacg/Escritorio/BlockChain/coleccion-tarjetas/coleccion-tarjetas/contracts/contratoauxiliar.sol",
    "exportedSymbols": {
      "ContratoAuxiliar": [
        42
      ]
    },
    "id": 43,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".19"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "/home/jacg/Escritorio/BlockChain/coleccion-tarjetas/coleccion-tarjetas/contracts/generartarjeta.sol",
        "file": "./generartarjeta.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 43,
        "sourceUnit": 377,
        "src": "26:30:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/jacg/Escritorio/BlockChain/coleccion-tarjetas/coleccion-tarjetas/contracts/generaralbum.sol",
        "file": "./generaralbum.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 43,
        "sourceUnit": 236,
        "src": "57:28:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/jacg/Escritorio/BlockChain/coleccion-tarjetas/coleccion-tarjetas/contracts/safemath.sol",
        "file": "./safemath.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 43,
        "sourceUnit": 531,
        "src": "86:24:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 5,
              "name": "GenerarTarjeta",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 376,
              "src": "141:14:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_GenerarTarjeta_$376",
                "typeString": "contract GenerarTarjeta"
              }
            },
            "id": 6,
            "nodeType": "InheritanceSpecifier",
            "src": "141:14:0"
          },
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 7,
              "name": "GenerarAlbum",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 235,
              "src": "157:12:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_GenerarAlbum_$235",
                "typeString": "contract GenerarAlbum"
              }
            },
            "id": 8,
            "nodeType": "InheritanceSpecifier",
            "src": "157:12:0"
          }
        ],
        "contractDependencies": [
          235,
          376,
          432
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 42,
        "linearizedBaseContracts": [
          42,
          235,
          376,
          432
        ],
        "name": "ContratoAuxiliar",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 11,
            "libraryName": {
              "contractScope": null,
              "id": 9,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 530,
              "src": "181:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$530",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "175:27:0",
            "typeName": {
              "id": 10,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "194:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 25,
              "nodeType": "Block",
              "src": "251:73:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 21,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 16,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 810,
                            "src": "265:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 17,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "265:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 18,
                            "name": "tarjetaAlPropietario",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 276,
                            "src": "279:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 20,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 19,
                            "name": "_tarjetaId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13,
                            "src": "300:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "279:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "265:46:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 15,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 813,
                      "src": "257:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 22,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "257:55:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23,
                  "nodeType": "ExpressionStatement",
                  "src": "257:55:0"
                },
                {
                  "id": 24,
                  "nodeType": "PlaceholderStatement",
                  "src": "318:1:0"
                }
              ]
            },
            "documentation": null,
            "id": 26,
            "name": "onlyOwnerOfTarjeta",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 14,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13,
                  "name": "_tarjetaId",
                  "nodeType": "VariableDeclaration",
                  "scope": 26,
                  "src": "234:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "234:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "233:17:0"
            },
            "src": "206:118:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 40,
              "nodeType": "Block",
              "src": "369:69:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 36,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 31,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 810,
                            "src": "383:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 32,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "383:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 33,
                            "name": "albumAlPropietario",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135,
                            "src": "397:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 35,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 34,
                            "name": "_albumId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28,
                            "src": "416:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "397:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "383:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 30,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 813,
                      "src": "375:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 37,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "375:51:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38,
                  "nodeType": "ExpressionStatement",
                  "src": "375:51:0"
                },
                {
                  "id": 39,
                  "nodeType": "PlaceholderStatement",
                  "src": "432:1:0"
                }
              ]
            },
            "documentation": null,
            "id": 41,
            "name": "onlyOwnerOfAlbum",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28,
                  "name": "_albumId",
                  "nodeType": "VariableDeclaration",
                  "scope": 41,
                  "src": "354:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "354:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "353:15:0"
            },
            "src": "328:110:0",
            "visibility": "internal"
          }
        ],
        "scope": 43,
        "src": "112:1428:0"
      }
    ],
    "src": "0:1541:0"
  },
  "legacyAST": {
    "absolutePath": "/home/jacg/Escritorio/BlockChain/coleccion-tarjetas/coleccion-tarjetas/contracts/contratoauxiliar.sol",
    "exportedSymbols": {
      "ContratoAuxiliar": [
        42
      ]
    },
    "id": 43,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".19"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "/home/jacg/Escritorio/BlockChain/coleccion-tarjetas/coleccion-tarjetas/contracts/generartarjeta.sol",
        "file": "./generartarjeta.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 43,
        "sourceUnit": 377,
        "src": "26:30:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/jacg/Escritorio/BlockChain/coleccion-tarjetas/coleccion-tarjetas/contracts/generaralbum.sol",
        "file": "./generaralbum.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 43,
        "sourceUnit": 236,
        "src": "57:28:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/jacg/Escritorio/BlockChain/coleccion-tarjetas/coleccion-tarjetas/contracts/safemath.sol",
        "file": "./safemath.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 43,
        "sourceUnit": 531,
        "src": "86:24:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 5,
              "name": "GenerarTarjeta",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 376,
              "src": "141:14:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_GenerarTarjeta_$376",
                "typeString": "contract GenerarTarjeta"
              }
            },
            "id": 6,
            "nodeType": "InheritanceSpecifier",
            "src": "141:14:0"
          },
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 7,
              "name": "GenerarAlbum",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 235,
              "src": "157:12:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_GenerarAlbum_$235",
                "typeString": "contract GenerarAlbum"
              }
            },
            "id": 8,
            "nodeType": "InheritanceSpecifier",
            "src": "157:12:0"
          }
        ],
        "contractDependencies": [
          235,
          376,
          432
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 42,
        "linearizedBaseContracts": [
          42,
          235,
          376,
          432
        ],
        "name": "ContratoAuxiliar",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 11,
            "libraryName": {
              "contractScope": null,
              "id": 9,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 530,
              "src": "181:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$530",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "175:27:0",
            "typeName": {
              "id": 10,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "194:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 25,
              "nodeType": "Block",
              "src": "251:73:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 21,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 16,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 810,
                            "src": "265:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 17,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "265:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 18,
                            "name": "tarjetaAlPropietario",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 276,
                            "src": "279:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 20,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 19,
                            "name": "_tarjetaId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13,
                            "src": "300:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "279:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "265:46:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 15,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 813,
                      "src": "257:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 22,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "257:55:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23,
                  "nodeType": "ExpressionStatement",
                  "src": "257:55:0"
                },
                {
                  "id": 24,
                  "nodeType": "PlaceholderStatement",
                  "src": "318:1:0"
                }
              ]
            },
            "documentation": null,
            "id": 26,
            "name": "onlyOwnerOfTarjeta",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 14,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13,
                  "name": "_tarjetaId",
                  "nodeType": "VariableDeclaration",
                  "scope": 26,
                  "src": "234:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "234:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "233:17:0"
            },
            "src": "206:118:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 40,
              "nodeType": "Block",
              "src": "369:69:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 36,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 31,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 810,
                            "src": "383:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 32,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "383:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 33,
                            "name": "albumAlPropietario",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135,
                            "src": "397:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 35,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 34,
                            "name": "_albumId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28,
                            "src": "416:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "397:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "383:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 30,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 813,
                      "src": "375:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 37,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "375:51:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38,
                  "nodeType": "ExpressionStatement",
                  "src": "375:51:0"
                },
                {
                  "id": 39,
                  "nodeType": "PlaceholderStatement",
                  "src": "432:1:0"
                }
              ]
            },
            "documentation": null,
            "id": 41,
            "name": "onlyOwnerOfAlbum",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28,
                  "name": "_albumId",
                  "nodeType": "VariableDeclaration",
                  "scope": 41,
                  "src": "354:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "354:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "353:15:0"
            },
            "src": "328:110:0",
            "visibility": "internal"
          }
        ],
        "scope": 43,
        "src": "112:1428:0"
      }
    ],
    "src": "0:1541:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.21+commit.dfe3193c.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-04-29T15:00:35.909Z"
}